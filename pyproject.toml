[tool.poetry]
name = "canway-openai-compatible-test"
version = "0.1.0"
description = "A tool to probe and analyze OpenAI-compatible APIs for feature support"
authors = ["canway"]
readme = "README.md"
packages = [{include = "openai_compatible_api_probe"}]

[tool.poetry.dependencies]
python = "^3.9"
openai = "^1.12.0"
typer = "^0.9.0"
rich = "^13.7.0"
pydantic = "^2.6.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
black = "^24.2.0"
flake8 = "^7.0.0"
mypy = "^1.8.0"
isort = "^5.13.2"
autopep8 = "^2.3.2"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "pydantic.*"
strict = true

[[tool.mypy.overrides]]
module = [
    "opentelemetry.*",
    "prometheus_fastapi_instrumentator.*"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --strict-markers"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning"
]

[tool.poetry.scripts]
openai-probe = "openai_compatible_api_probe.cli:app" 